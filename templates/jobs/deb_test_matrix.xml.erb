<?xml version="1.0" encoding="UTF-8"?><matrix-project plugin="matrix-project@1.7.1">
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>25</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <% if @release_type == "dev" -%>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description/>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <% end -%>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url><%= (@control_deb || @control_repo).encode(xml: :text) %></url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/<%= @control_deb.nil? ? 'deb/' : '' %><%= @control_branch.encode(xml: :text) %></name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GithubWeb"/>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>true</shallow>
        <noTags>true</noTags>
        <reference/>
        <depth>0</depth>
      </hudson.plugins.git.extensions.impl.CloneOption>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>packaging</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
      <hudson.plugins.git.extensions.impl.PathRestriction>
        <includedRegions><%= @product.encode(xml: :text) %>/<%= @_use.encode(xml: :text) %>/*</includedRegions>
        <excludedRegions/>
      </hudson.plugins.git.extensions.impl.PathRestriction>
    </extensions>
  </scm>
  <assignedNode><%= @jenkins_label.encode(xml: :text) %></assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec/>
      <upstreamProjects><%= @_binary_job.encode(xml: :text) %></upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>arch</name>
      <values>
        <%- @arch.each do |arch| -%>
        <string><%= arch.encode(xml: :text) %></string>
        <%- end -%>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project><%= @_binary_job.encode(xml: :text) %></project>
      <filter>*.deb</filter>
      <target>$WORKSPACE/archive</target>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
<%= scope.function_template(['icinga_build/scripts/deb_test.sh.erb']).encode(xml: :text) %>
      </command>
    </hudson.tasks.Shell>
  </builders>
  <buildWrappers>
    <com.cloudbees.jenkins.plugins.okidocki.DockerBuildWrapper plugin="docker-custom-build-environment@1.6.5">
      <selector class="com.cloudbees.jenkins.plugins.okidocki.PullDockerImageSelector">
        <image><%= @_docker_image_test.encode(xml: :text) %></image>
      </selector>
      <dockerHost plugin="docker-commons@1.4.0"/>
      <% if @docker_registry_credentials -%>
      <dockerRegistryCredentials><%= @docker_registry_credentials.encode(xml: :text) %></dockerRegistryCredentials>
      <% else -%>
      <dockerRegistryCredentials/>
      <% end -%>
      <verbose>false</verbose>
      <volumes class="empty-list"/>
      <privileged>false</privileged>
      <group/>
      <command>/bin/cat</command>
      <forcePull>true</forcePull>
      <net>bridge</net>
    </com.cloudbees.jenkins.plugins.okidocki.DockerBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <publishers>
    <% if @release_type == "dev" -%>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.31">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
		  <projects><%= @_publish_job.encode(xml: :text) %></projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
    <% end -%>
  </publishers>
</matrix-project>