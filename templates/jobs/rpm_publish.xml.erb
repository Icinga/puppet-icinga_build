<?xml version="1.0" encoding="UTF-8"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>aptly_server</name>
          <description/>
          <defaultValue><%= @aptly_server.encode(xml: :text) %></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>aptly_user</name>
          <description/>
          <defaultValue><%= @aptly_user.encode(xml: :text) %></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>aptly_password</name>
          <description/>
          <defaultValue><%= @aptly_password.encode(xml: :text) %></defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>allow_release</name>
          <description>
            Allow the actual upload, this is disabled on release builds by default.
            So the build will fail here. Enable it manually to publish a new version!
          </description>
          <defaultValue><%= @allow_release %></defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode><%= @jenkins_label.encode(xml: :text) %></assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec/>
      <upstreamProjects><%= @_test_job.encode(xml: :text) %></upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <%- @arch.each do |a|
      # Note: This is needed due to jobs that might be retired with Matrix reloaded
      # So we really get the artifacts of all successful builds
    -%>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project><%= @_binary_job.encode(xml: :text) %>/arch=<%= a.encode(xml: :text) %></project>
      <filter>rpmbuild/RPMS/**/*.rpm, rpmbuild/SRPMS/*.rpm</filter>
      <target/>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <%- end -%>
    <hudson.tasks.Shell>
      <command><%= scope.function_template(['icinga_build/scripts/aptly_publish.sh.erb']).encode(xml: :text) %></command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper/>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>true</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <com.cloudbees.jenkins.plugins.okidocki.DockerBuildWrapper plugin="docker-custom-build-environment@1.6.5">
      <selector class="com.cloudbees.jenkins.plugins.okidocki.PullDockerImageSelector">
        <image><%= @_docker_image_publish.encode(xml: :text) %></image>
      </selector>
      <dockerHost plugin="docker-commons@1.4.0"/>
      <% if @docker_registry_credentials -%>
      <dockerRegistryCredentials><%= @docker_registry_credentials.encode(xml: :text) %></dockerRegistryCredentials>
      <% else -%>
      <dockerRegistryCredentials/>
      <% end -%>
      <verbose>false</verbose>
      <volumes class="empty-list"/>
      <privileged>false</privileged>
      <group/>
      <command>/bin/cat</command>
      <forcePull>true</forcePull>
      <net>bridge</net>
    </com.cloudbees.jenkins.plugins.okidocki.DockerBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>