#!/bin/bash

set -e

# configuration
project=<%= @product.dump %>
os=<%= @_os.dump %>
dist=<%= @_dist.dump %>

# from job environment
: ${arch:=x86_64}

###
# please do not edit below
###

EATMYDATA="eatmydata"

# enabling ccache
PATH=/usr/lib/ccache:"$PATH"
export CCACHE_DIR="$WORKSPACE/ccache"

if [ "$arch" = x86 ]; then
  target_arch=i386
else
  target_arch="$arch"
fi

set -x

sudo apt-get update

# TODO: move to image
if [ -n "$EATMYDATA" ]; then
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes eatmydata
fi

rm -rf "$project"
dpkg-source -x "$WORKSPACE/<%= @pipeline -%>-$arch"/*.dsc "$project"

cd "$project"

# Installing dependencies
# TODO: move to image
sudo DEBIAN_FRONTEND=noninteractive $EATMYDATA apt-get install --no-install-recommends -y pbuilder aptitude
sudo DEBIAN_FRONTEND=noninteractive $EATMYDATA setarch ${target_arch} /usr/lib/pbuilder/pbuilder-satisfydepends

# Building the package
binopts=''

# Build arch-independent packages on armhf/x86
case "$dist" in
  raspbian-*)
    common_arch='armhf'
    ;;
  *)
    common_arch='x86_64'
    ;;
esac

if [ "$arch" != "$common_arch" ]; then
  binopts="-B"
fi

$EATMYDATA setarch ${target_arch} dpkg-buildpackage -rfakeroot $binopts
