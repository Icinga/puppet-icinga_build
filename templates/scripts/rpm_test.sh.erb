#!/bin/bash

set -ex

project=<%= @product.dump %>
os=<%= @_os.dump %>
dist=<%= @_dist.dump %>
control_rpm=<%= @control_rpm.dump unless @control_rpm.nil? %>

# from job environment
: ${arch:=x86_64}

repo="$WORKSPACE"/archive/rpmbuild/RPMS

if [ "$arch" = x86 ]; then
  target_arch=i386
else
  target_arch="$arch"
fi

if [ -n "$control_rpm" ]; then
  pkg_src=./packaging
else
  pkg_src=./packaging/${project}
fi

# Preparing local repository
case "$os" in
  centos|fedora)
    sudo setarch "$target_arch" yum install -y createrepo
    createrepo "$repo"

    sudo -E su -c "cat << EOF > /etc/yum.repos.d/local.repo
[local]
name=local workspace
baseurl=file://$repo
enabled=1
gpgcheck=0
EOF"
    ;;
  sles|opensuse)
    # TODO: can we downgrade this to a simple ref again?
    # images should be build with clean meta data in the future...
    sudo setarch "$target_arch" zypper clean -a
    sudo setarch "$target_arch" zypper --non-interactive --no-gpg-checks --gpg-auto-import-keys ref --force --services

    # Just use the local dir, zypper will take care of the rest!
    sudo setarch "$target_arch" zypper addrepo --no-gpgcheck "$repo" local

    # Workaround for SLES 11 SP4
    # https://github.com/Icinga/puppet-icinga_build/issues/33
    if [[ "$dist" = 11.* ]]; then
      # when the Kernel has at least some SELinux code loaded (e.g. on CoreOS)
      # libselinux1 sees the process having an context, and assumes SELinux is enabled
      sudo sh -xe <<<"
        getent group icinga >/dev/null || echo 'icinga:!:998:' >> /etc/group
        getent group icingacmd >/dev/null || echo 'icingacmd:!:997:icinga' >> /etc/group
        getent group icingaweb2 >/dev/null || echo 'icingaweb2:!:996:' >> /etc/group
        if ! getent passwd icinga >/dev/null; then
          echo 'icinga:x:998:998:icinga:/var/spool/icinga2:/sbin/nologin' >> /etc/passwd
          echo 'icinga:!:17310:0:99999:7:::' >> /etc/shadow
        fi
      "
    fi
    ;;
  *)
    echo "OS $os not supported in testing..." >&2
    exit 1
    ;;
esac

if [ ! -f archive/"${project}"-package.version ]; then
  echo "archive/${project}-package.version artifact is required!" >&2
  exit 1
fi
package_version=$(cat archive/"${project}"-package.version | tr -d '\r\n')

# Helper to install packages
install_package() {
  versioned=1
  if [ "$1" = "-n" ] || [ "$1" = "--no-version" ]; then
    shift
    versioned=0
  fi

  packages=()
  for package in "$@"
  do
    packages+=("${package}-${package_version}")
  done

  case "$os" in
    centos|fedora)
      sudo setarch "$target_arch" yum install -y "${packages[@]}"
      ;;
    sles|opensuse)
      sudo setarch "$target_arch" zypper install -y "${packages[@]}"
      ;;
    *)
      echo "OS $os not supported in testing - package install..." >&2
      exit 1
      ;;
  esac
}

source "${pkg_src}"/testing/start_test.sh
